[
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "numpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy",
        "description": "numpy",
        "detail": "numpy",
        "documentation": {}
    },
    {
        "label": "torch",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch",
        "description": "torch",
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "nn",
        "importPath": "torch",
        "description": "torch",
        "isExtraImport": true,
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "nn",
        "importPath": "torch",
        "description": "torch",
        "isExtraImport": true,
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "nn",
        "importPath": "torch",
        "description": "torch",
        "isExtraImport": true,
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "optim",
        "importPath": "torch",
        "description": "torch",
        "isExtraImport": true,
        "detail": "torch",
        "documentation": {}
    },
    {
        "label": "torch.nn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch.nn",
        "description": "torch.nn",
        "detail": "torch.nn",
        "documentation": {}
    },
    {
        "label": "functional",
        "importPath": "torch.nn",
        "description": "torch.nn",
        "isExtraImport": true,
        "detail": "torch.nn",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "SumTree",
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "PrioritizedReplayBuffer",
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "PrioritizedReplayBuffer",
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "PrioritizedReplayBuffer",
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Dict",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Iterable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Type",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Callable",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Tuple",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Union",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "Optional",
        "importPath": "typing",
        "description": "typing",
        "isExtraImport": true,
        "detail": "typing",
        "documentation": {}
    },
    {
        "label": "matplotlib.pyplot",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "matplotlib.pyplot",
        "description": "matplotlib.pyplot",
        "detail": "matplotlib.pyplot",
        "documentation": {}
    },
    {
        "label": "seaborn",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "seaborn",
        "description": "seaborn",
        "detail": "seaborn",
        "documentation": {}
    },
    {
        "label": "torch.nn.functional",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch.nn.functional",
        "description": "torch.nn.functional",
        "detail": "torch.nn.functional",
        "documentation": {}
    },
    {
        "label": "Discrete",
        "importPath": "gymnasium.spaces",
        "description": "gymnasium.spaces",
        "isExtraImport": true,
        "detail": "gymnasium.spaces",
        "documentation": {}
    },
    {
        "label": "Box",
        "importPath": "gymnasium.spaces",
        "description": "gymnasium.spaces",
        "isExtraImport": true,
        "detail": "gymnasium.spaces",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "dataclass",
        "importPath": "dataclasses",
        "description": "dataclasses",
        "isExtraImport": true,
        "detail": "dataclasses",
        "documentation": {}
    },
    {
        "label": "wandb",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "wandb",
        "description": "wandb",
        "detail": "wandb",
        "documentation": {}
    },
    {
        "label": "get_reference_directions",
        "importPath": "pymoo.util.ref_dirs",
        "description": "pymoo.util.ref_dirs",
        "isExtraImport": true,
        "detail": "pymoo.util.ref_dirs",
        "documentation": {}
    },
    {
        "label": "get_reference_directions",
        "importPath": "pymoo.util.ref_dirs",
        "description": "pymoo.util.ref_dirs",
        "isExtraImport": true,
        "detail": "pymoo.util.ref_dirs",
        "documentation": {}
    },
    {
        "label": "filter_pareto_dominated",
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "isExtraImport": true,
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "get_non_dominated",
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "isExtraImport": true,
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "get_non_dominated_inds",
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "isExtraImport": true,
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "ParetoArchive",
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "isExtraImport": true,
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "expected_utility",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "igd",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "maximum_utility_loss",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "sparsity",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "sparsity",
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "isExtraImport": true,
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "random_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "extrema_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "random_weights",
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "isExtraImport": true,
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "time",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "time",
        "description": "time",
        "detail": "time",
        "documentation": {}
    },
    {
        "label": "ABC",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "abstractmethod",
        "importPath": "abc",
        "description": "abc",
        "isExtraImport": true,
        "detail": "abc",
        "documentation": {}
    },
    {
        "label": "gymnasium",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "gymnasium",
        "description": "gymnasium",
        "detail": "gymnasium",
        "documentation": {}
    },
    {
        "label": "spaces",
        "importPath": "gymnasium",
        "description": "gymnasium",
        "isExtraImport": true,
        "detail": "gymnasium",
        "documentation": {}
    },
    {
        "label": "Env",
        "importPath": "gymnasium",
        "description": "gymnasium",
        "isExtraImport": true,
        "detail": "gymnasium",
        "documentation": {}
    },
    {
        "label": "MOSyncVectorEnv",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium.utils",
        "description": "mo_gymnasium.utils",
        "isExtraImport": true,
        "detail": "mo_gymnasium.utils",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "isExtraImport": true,
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "deepcopy",
        "importPath": "copy",
        "description": "copy",
        "isExtraImport": true,
        "detail": "copy",
        "documentation": {}
    },
    {
        "label": "ConvexHull",
        "importPath": "scipy.spatial",
        "description": "scipy.spatial",
        "isExtraImport": true,
        "detail": "scipy.spatial",
        "documentation": {}
    },
    {
        "label": "numpy.typing",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "numpy.typing",
        "description": "numpy.typing",
        "detail": "numpy.typing",
        "documentation": {}
    },
    {
        "label": "HV",
        "importPath": "pymoo.indicators.hv",
        "description": "pymoo.indicators.hv",
        "isExtraImport": true,
        "detail": "pymoo.indicators.hv",
        "documentation": {}
    },
    {
        "label": "IGD",
        "importPath": "pymoo.indicators.igd",
        "description": "pymoo.indicators.igd",
        "isExtraImport": true,
        "detail": "pymoo.indicators.igd",
        "documentation": {}
    },
    {
        "label": "Tchebicheff",
        "importPath": "pymoo.decomposition.tchebicheff",
        "description": "pymoo.decomposition.tchebicheff",
        "isExtraImport": true,
        "detail": "pymoo.decomposition.tchebicheff",
        "documentation": {}
    },
    {
        "label": "lru_cache",
        "importPath": "functools",
        "description": "functools",
        "isExtraImport": true,
        "detail": "functools",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "chain",
        "importPath": "itertools",
        "description": "itertools",
        "isExtraImport": true,
        "detail": "itertools",
        "documentation": {}
    },
    {
        "label": "torch.optim",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "torch.optim",
        "description": "torch.optim",
        "detail": "torch.optim",
        "documentation": {}
    },
    {
        "label": "Normal",
        "importPath": "torch.distributions",
        "description": "torch.distributions",
        "isExtraImport": true,
        "detail": "torch.distributions",
        "documentation": {}
    },
    {
        "label": "Categorical",
        "importPath": "torch.distributions",
        "description": "torch.distributions",
        "isExtraImport": true,
        "detail": "torch.distributions",
        "documentation": {}
    },
    {
        "label": "Normal",
        "importPath": "torch.distributions",
        "description": "torch.distributions",
        "isExtraImport": true,
        "detail": "torch.distributions",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "isExtraImport": true,
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "polyak_update",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "NatureCNN",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "get_grad_norm",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "polyak_update",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "NatureCNN",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "get_grad_norm",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "huber",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "polyak_update",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "polyak_update",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "isExtraImport": true,
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "override",
        "importPath": "typing_extensions",
        "description": "typing_extensions",
        "isExtraImport": true,
        "detail": "typing_extensions",
        "documentation": {}
    },
    {
        "label": "ReplayBuffer",
        "importPath": "morl_baselines.common.buffer",
        "description": "morl_baselines.common.buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.buffer",
        "documentation": {}
    },
    {
        "label": "ReplayBuffer",
        "importPath": "morl_baselines.common.buffer",
        "description": "morl_baselines.common.buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.buffer",
        "documentation": {}
    },
    {
        "label": "ReplayBuffer",
        "importPath": "morl_baselines.common.buffer",
        "description": "morl_baselines.common.buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.buffer",
        "documentation": {}
    },
    {
        "label": "linearly_decaying_value",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "linearly_decaying_value",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "unique_tol",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "unique_tol",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "linearly_decaying_value",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "linearly_decaying_value",
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "ProbabilisticEnsemble",
        "importPath": "morl_baselines.common.model_based.probabilistic_ensemble",
        "description": "morl_baselines.common.model_based.probabilistic_ensemble",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.probabilistic_ensemble",
        "documentation": {}
    },
    {
        "label": "ProbabilisticEnsemble",
        "importPath": "morl_baselines.common.model_based.probabilistic_ensemble",
        "description": "morl_baselines.common.model_based.probabilistic_ensemble",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.probabilistic_ensemble",
        "documentation": {}
    },
    {
        "label": "ModelEnv",
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "visualize_eval",
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "ModelEnv",
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "visualize_eval",
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "LinearSupport",
        "importPath": "morl_baselines.multi_policy.linear_support.linear_support",
        "description": "morl_baselines.multi_policy.linear_support.linear_support",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.linear_support.linear_support",
        "documentation": {}
    },
    {
        "label": "LinearSupport",
        "importPath": "morl_baselines.multi_policy.linear_support.linear_support",
        "description": "morl_baselines.multi_policy.linear_support.linear_support",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.linear_support.linear_support",
        "documentation": {}
    },
    {
        "label": "LinearSupport",
        "importPath": "morl_baselines.multi_policy.linear_support.linear_support",
        "description": "morl_baselines.multi_policy.linear_support.linear_support",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.linear_support.linear_support",
        "documentation": {}
    },
    {
        "label": "cdd",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cdd",
        "description": "cdd",
        "detail": "cdd",
        "documentation": {}
    },
    {
        "label": "cvxpy",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "cvxpy",
        "description": "cvxpy",
        "detail": "cvxpy",
        "documentation": {}
    },
    {
        "label": "SolverError",
        "importPath": "cvxpy",
        "description": "cvxpy",
        "isExtraImport": true,
        "detail": "cvxpy",
        "documentation": {}
    },
    {
        "label": "Env",
        "importPath": "gymnasium.core",
        "description": "gymnasium.core",
        "isExtraImport": true,
        "detail": "gymnasium.core",
        "documentation": {}
    },
    {
        "label": "weighted_sum",
        "importPath": "morl_baselines.common.scalarization",
        "description": "morl_baselines.common.scalarization",
        "isExtraImport": true,
        "detail": "morl_baselines.common.scalarization",
        "documentation": {}
    },
    {
        "label": "weighted_sum",
        "importPath": "morl_baselines.common.scalarization",
        "description": "morl_baselines.common.scalarization",
        "isExtraImport": true,
        "detail": "morl_baselines.common.scalarization",
        "documentation": {}
    },
    {
        "label": "MOQLearning",
        "importPath": "morl_baselines.single_policy.ser.mo_q_learning",
        "description": "morl_baselines.single_policy.ser.mo_q_learning",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.ser.mo_q_learning",
        "documentation": {}
    },
    {
        "label": "heapq",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "heapq",
        "description": "heapq",
        "detail": "heapq",
        "documentation": {}
    },
    {
        "label": "mo_gymnasium",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "mo_gymnasium",
        "description": "mo_gymnasium",
        "detail": "mo_gymnasium",
        "documentation": {}
    },
    {
        "label": "MORecordEpisodeStatistics",
        "importPath": "mo_gymnasium",
        "description": "mo_gymnasium",
        "isExtraImport": true,
        "detail": "mo_gymnasium",
        "documentation": {}
    },
    {
        "label": "least_squares",
        "importPath": "scipy.optimize",
        "description": "scipy.optimize",
        "isExtraImport": true,
        "detail": "scipy.optimize",
        "documentation": {}
    },
    {
        "label": "MOPPO",
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "MOPPONet",
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "make_env",
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "AccruedRewardReplayBuffer",
        "importPath": "morl_baselines.common.accrued_reward_buffer",
        "description": "morl_baselines.common.accrued_reward_buffer",
        "isExtraImport": true,
        "detail": "morl_baselines.common.accrued_reward_buffer",
        "documentation": {}
    },
    {
        "label": "TabularModel",
        "importPath": "morl_baselines.common.model_based.tabular_model",
        "description": "morl_baselines.common.model_based.tabular_model",
        "isExtraImport": true,
        "detail": "morl_baselines.common.model_based.tabular_model",
        "documentation": {}
    },
    {
        "label": "csv",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "csv",
        "description": "csv",
        "detail": "csv",
        "documentation": {}
    },
    {
        "label": "pandas",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "pandas",
        "description": "pandas",
        "detail": "pandas",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "PPO",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "DDPG",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "TD3",
        "importPath": "stable_baselines3",
        "description": "stable_baselines3",
        "isExtraImport": true,
        "detail": "stable_baselines3",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "NormalActionNoise",
        "importPath": "stable_baselines3.common.noise",
        "description": "stable_baselines3.common.noise",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.noise",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "SubprocVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "DummyVecEnv",
        "importPath": "stable_baselines3.common.env_util",
        "description": "stable_baselines3.common.env_util",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.env_util",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "Monitor",
        "importPath": "stable_baselines3.common.monitor",
        "description": "stable_baselines3.common.monitor",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.monitor",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecNormalize",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "VecFrameStack",
        "importPath": "stable_baselines3.common.vec_env",
        "description": "stable_baselines3.common.vec_env",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.vec_env",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "evaluate_policy",
        "importPath": "stable_baselines3.common.evaluation",
        "description": "stable_baselines3.common.evaluation",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.evaluation",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "EvalCallback",
        "importPath": "stable_baselines3.common.callbacks",
        "description": "stable_baselines3.common.callbacks",
        "isExtraImport": true,
        "detail": "stable_baselines3.common.callbacks",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "isExtraImport": true,
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "register",
        "importPath": "gymnasium.envs.registration",
        "description": "gymnasium.envs.registration",
        "isExtraImport": true,
        "detail": "gymnasium.envs.registration",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "isExtraImport": true,
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "isExtraImport": true,
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "njit",
        "importPath": "numba",
        "description": "numba",
        "isExtraImport": true,
        "detail": "numba",
        "documentation": {}
    },
    {
        "label": "prange",
        "importPath": "numba",
        "description": "numba",
        "isExtraImport": true,
        "detail": "numba",
        "documentation": {}
    },
    {
        "label": "List",
        "importPath": "numba.typed",
        "description": "numba.typed",
        "isExtraImport": true,
        "detail": "numba.typed",
        "documentation": {}
    },
    {
        "label": "floor",
        "importPath": "math",
        "description": "math",
        "isExtraImport": true,
        "detail": "math",
        "documentation": {}
    },
    {
        "label": "EnsembleLayer",
        "kind": 6,
        "importPath": "morl_baselines.common.model_based.probabilistic_ensemble",
        "description": "morl_baselines.common.model_based.probabilistic_ensemble",
        "peekOfCode": "class EnsembleLayer(nn.Module):\n    \"\"\"Ensemble layer.\"\"\"\n    def __init__(self, ensemble_size, input_dim, output_dim):\n        \"\"\"Initialize the ensemble layer.\"\"\"\n        super().__init__()\n        self.W = nn.Parameter(th.empty((ensemble_size, input_dim, output_dim)), requires_grad=True).float()\n        nn.init.orthogonal_(self.W, gain=nn.init.calculate_gain(\"relu\"))\n        self.b = nn.Parameter(th.zeros((ensemble_size, 1, output_dim)), requires_grad=True).float()\n    def forward(self, x):\n        \"\"\"Forward pass of the ensemble layer.\"\"\"",
        "detail": "morl_baselines.common.model_based.probabilistic_ensemble",
        "documentation": {}
    },
    {
        "label": "ProbabilisticEnsemble",
        "kind": 6,
        "importPath": "morl_baselines.common.model_based.probabilistic_ensemble",
        "description": "morl_baselines.common.model_based.probabilistic_ensemble",
        "peekOfCode": "class ProbabilisticEnsemble(nn.Module):\n    \"\"\"Probababilistic ensemble of neural networks.\"\"\"\n    def __init__(\n        self,\n        input_dim,\n        output_dim,\n        ensemble_size=5,\n        arch=[200, 200, 200, 200],\n        activation=F.relu,\n        learning_rate=0.001,",
        "detail": "morl_baselines.common.model_based.probabilistic_ensemble",
        "documentation": {}
    },
    {
        "label": "TabularModel",
        "kind": 6,
        "importPath": "morl_baselines.common.model_based.tabular_model",
        "description": "morl_baselines.common.model_based.tabular_model",
        "peekOfCode": "class TabularModel:\n    \"\"\"Tabular dynamics model S_{t+1}, R_t ~ m(.,.|s,a) .\"\"\"\n    def __init__(self, deterministic: bool = False, prioritize=False, max_size=int(1e5)) -> None:\n        \"\"\"Initialize the model.\n        Args:\n            deterministic: If True, the model is deterministic and the next state and reward are stored directly.\n            prioritize: If True, the transitions are stored in a prioritized buffer.\n            max_size: The maximum size of the prioritized buffer.\n        \"\"\"\n        self.deterministic = deterministic",
        "detail": "morl_baselines.common.model_based.tabular_model",
        "documentation": {}
    },
    {
        "label": "ModelEnv",
        "kind": 6,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "class ModelEnv:\n    \"\"\"Wrapper for the model to be used as an environment.\"\"\"\n    def __init__(self, model, env_id=None, rew_dim=1):\n        \"\"\"Initialize the environment.\n        Args:\n            model: model to be used as an environment.\n            env_id: environment id.\n            rew_dim: reward dimension.\n        \"\"\"\n        self.model = model",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "termination_fn_false",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def termination_fn_false(obs, act, next_obs):\n    \"\"\"Returns a vector of False values of the same length as the batch size.\"\"\"\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2\n    done = np.array([False]).repeat(len(obs))\n    done = done[:, np.newaxis]\n    return done\ndef termination_fn_dst(obs, act, next_obs):\n    \"\"\"Termination function of DST.\"\"\"\n    from mo_gymnasium.deep_sea_treasure.deep_sea_treasure import CONCAVE_MAP\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "termination_fn_dst",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def termination_fn_dst(obs, act, next_obs):\n    \"\"\"Termination function of DST.\"\"\"\n    from mo_gymnasium.deep_sea_treasure.deep_sea_treasure import CONCAVE_MAP\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2\n    done = np.array([False]).repeat(len(obs))\n    next_obs_int = (next_obs * 10).astype(int)\n    for i in range(len(done)):\n        if next_obs_int[i, 0] < 0 or next_obs_int[i, 0] > 10 or next_obs_int[i, 1] < 0 or next_obs_int[i, 1] > 10:\n            done[i] = False\n        else:",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "termination_fn_mountaincar",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def termination_fn_mountaincar(obs, act, next_obs):\n    \"\"\"Termination function of mountin car.\"\"\"\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2\n    position = next_obs[:, 0]\n    velocity = next_obs[:, 1]\n    done = (position >= 0.45) * (velocity >= 0.0)\n    done = done[:, np.newaxis]\n    return done\ndef termination_fn_minecart(obs, act, next_obs):\n    \"\"\"Termination function of minecart.\"\"\"",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "termination_fn_minecart",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def termination_fn_minecart(obs, act, next_obs):\n    \"\"\"Termination function of minecart.\"\"\"\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2\n    old_pos = obs[:, 0:2]\n    pos = next_obs[:, 0:2]\n    # had_ore = (obs[:,-2] > 0) + (obs[:,-1] > 0)\n    in_base = np.sqrt(np.einsum(\"ij,ij->i\", pos, pos)) < 0.15\n    was_out_base = np.sqrt(np.einsum(\"ij,ij->i\", old_pos, old_pos)) >= 0.15\n    done = was_out_base * in_base\n    done = done[:, np.newaxis]",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "termination_fn_hopper",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def termination_fn_hopper(obs, act, next_obs):\n    \"\"\"Termination function of hopper.\"\"\"\n    assert len(obs.shape) == len(next_obs.shape) == len(act.shape) == 2\n    height = next_obs[:, 0]\n    angle = next_obs[:, 1]\n    not_done = (\n        np.isfinite(next_obs).all(axis=-1)\n        * np.abs(next_obs[:, 1:] < 100).all(axis=-1)\n        * (height > 0.7)\n        * (np.abs(angle) < 0.2)",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "visualize_eval",
        "kind": 2,
        "importPath": "morl_baselines.common.model_based.utils",
        "description": "morl_baselines.common.model_based.utils",
        "peekOfCode": "def visualize_eval(\n    agent, env, model=None, w=None, horizon=10, init_obs=None, compound=True, deterministic=False, show=False, filename=None\n):\n    \"\"\"Generates a plot of the evolution of the state, reward and model predicitions ove time.\n    Args:\n        agent: agent to be evaluated\n        env: environment to be evaluated\n        model: model to be evaluated\n        w: weights to be used for the evaluation\n        horizon: number of time steps",
        "detail": "morl_baselines.common.model_based.utils",
        "documentation": {}
    },
    {
        "label": "AccruedRewardReplayBuffer",
        "kind": 6,
        "importPath": "morl_baselines.common.accrued_reward_buffer",
        "description": "morl_baselines.common.accrued_reward_buffer",
        "peekOfCode": "class AccruedRewardReplayBuffer:\n    \"\"\"Replay buffer with accrued rewards stored (for ESR algorithms).\"\"\"\n    def __init__(\n        self,\n        obs_shape,\n        action_shape,\n        rew_dim=1,\n        max_size=100000,\n        obs_dtype=np.float32,\n        action_dtype=np.float32,",
        "detail": "morl_baselines.common.accrued_reward_buffer",
        "documentation": {}
    },
    {
        "label": "ReplayBuffer",
        "kind": 6,
        "importPath": "morl_baselines.common.buffer",
        "description": "morl_baselines.common.buffer",
        "peekOfCode": "class ReplayBuffer:\n    \"\"\"Multi-objective replay buffer for multi-objective reinforcement learning.\"\"\"\n    def __init__(\n        self,\n        obs_shape,\n        action_dim,\n        rew_dim=1,\n        max_size=100000,\n        obs_dtype=np.float32,\n        action_dtype=np.float32,",
        "detail": "morl_baselines.common.buffer",
        "documentation": {}
    },
    {
        "label": "SumTree",
        "kind": 6,
        "importPath": "morl_baselines.common.diverse_buffer",
        "description": "morl_baselines.common.diverse_buffer",
        "peekOfCode": "class SumTree:\n    \"\"\"Implementation of a SumTree with multiple trees covering the same data array.\n    Adapted from: https://github.com/jaara/AI-blog/blob/master/SumTree.py.\n    Each transition is stored along with its trace_id.\n    \"\"\"\n    def __init__(self, capacity):\n        \"\"\"Initializes the SumTree.\n        Args:\n            capacity: The maximum number of transitions to store in the SumTree\n        \"\"\"",
        "detail": "morl_baselines.common.diverse_buffer",
        "documentation": {}
    },
    {
        "label": "DiverseMemory",
        "kind": 6,
        "importPath": "morl_baselines.common.diverse_buffer",
        "description": "morl_baselines.common.diverse_buffer",
        "peekOfCode": "class DiverseMemory:\n    \"\"\"Prioritized Replay Buffer with integrated secondary Diverse Replay Buffer. Code extracted from https://github.com/axelabels/DynMORL.\"\"\"\n    def __init__(\n        self,\n        main_capacity: int,\n        sec_capacity: int = 0,\n        trace_diversity: bool = True,\n        crowding_diversity: bool = True,\n        value_function=lambda trace, trace_id, memory_indices: np.random.random(1),\n        e: float = 0.01,",
        "detail": "morl_baselines.common.diverse_buffer",
        "documentation": {}
    },
    {
        "label": "crowd_dist",
        "kind": 2,
        "importPath": "morl_baselines.common.diverse_buffer",
        "description": "morl_baselines.common.diverse_buffer",
        "peekOfCode": "def crowd_dist(evals: list):\n    \"\"\"Given a list of vectors, this method computes the crowding distance of each vector, i.e. the sum of distances between neighbors for each dimension.\n    Args:\n        evals: list of vectors\n    Returns:\n        list of crowding distances\n    \"\"\"\n    @dataclass\n    class Point:\n        data: np.ndarray",
        "detail": "morl_baselines.common.diverse_buffer",
        "documentation": {}
    },
    {
        "label": "MAIN_TREE",
        "kind": 5,
        "importPath": "morl_baselines.common.diverse_buffer",
        "description": "morl_baselines.common.diverse_buffer",
        "peekOfCode": "MAIN_TREE = 0\nclass SumTree:\n    \"\"\"Implementation of a SumTree with multiple trees covering the same data array.\n    Adapted from: https://github.com/jaara/AI-blog/blob/master/SumTree.py.\n    Each transition is stored along with its trace_id.\n    \"\"\"\n    def __init__(self, capacity):\n        \"\"\"Initializes the SumTree.\n        Args:\n            capacity: The maximum number of transitions to store in the SumTree",
        "detail": "morl_baselines.common.diverse_buffer",
        "documentation": {}
    },
    {
        "label": "eval_mo",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def eval_mo(\n    agent,\n    env,\n    w: Optional[np.ndarray] = None,\n    scalarization=np.dot,\n    render: bool = False,\n) -> Tuple[float, float, np.ndarray, np.ndarray]:\n    \"\"\"Evaluates one episode of the agent in the environment.\n    Args:\n        agent: Agent",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "eval_mo_reward_conditioned",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def eval_mo_reward_conditioned(\n    agent,\n    env,\n    scalarization=np.dot,\n    w: Optional[np.ndarray] = None,\n    render: bool = False,\n) -> Tuple[float, float, np.ndarray, np.ndarray]:\n    \"\"\"Evaluates one episode of the agent in the environment. This makes the assumption that the agent is conditioned on the accrued reward i.e. for ESR agent.\n    Args:\n        agent: Agent",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "policy_evaluation_mo",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def policy_evaluation_mo(agent, env, w: np.ndarray, rep: int = 5) -> Tuple[float, float, np.ndarray, np.ndarray]:\n    \"\"\"Evaluates the value of a policy by running the policy for multiple episodes. Returns the average returns.\n    Args:\n        agent: Agent\n        env: MO-Gymnasium environment\n        w (np.ndarray): Weight vector\n        rep (int, optional): Number of episodes for averaging. Defaults to 5.\n    Returns:\n        (float, float, np.ndarray, np.ndarray): Avg scalarized return, Avg scalarized discounted return, Avg vectorized return, Avg vectorized discounted return\n    \"\"\"",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_all_multi_policy_metrics",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def log_all_multi_policy_metrics(\n    current_front: List[np.ndarray],\n    hv_ref_point: np.ndarray,\n    reward_dim: int,\n    global_step: int,\n    n_sample_weights: int = 50,\n    ref_front: Optional[List[np.ndarray]] = None,\n):\n    \"\"\"Logs all metrics for multi-policy training.\n    Logged metrics:",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "seed_everything",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def seed_everything(seed: int):\n    \"\"\"Set random seeds for reproducibility.\n    This function should be called only once per python process, preferably at the beginning of the main script.\n    It has global effects on the random state of the python process, so it should be used with care.\n    Args:\n        seed: random seed\n    \"\"\"\n    random.seed(seed)\n    os.environ[\"PYTHONHASHSEED\"] = str(seed)\n    np.random.seed(seed)",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "log_episode_info",
        "kind": 2,
        "importPath": "morl_baselines.common.evaluation",
        "description": "morl_baselines.common.evaluation",
        "peekOfCode": "def log_episode_info(\n    info: dict,\n    scalarization,\n    weights: Optional[np.ndarray],\n    global_timestep: int,\n    id: Optional[int] = None,\n    verbose: bool = True,\n):\n    \"\"\"Logs information of the last episode from the info dict (automatically filled by the RecordStatisticsWrapper).\n    Args:",
        "detail": "morl_baselines.common.evaluation",
        "documentation": {}
    },
    {
        "label": "MOPolicy",
        "kind": 6,
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "peekOfCode": "class MOPolicy(ABC):\n    \"\"\"An MORL policy.\n    It has an underlying learning structure which can be:\n    - used to get a greedy action via eval()\n    - updated using some experiences via update()\n    Note that the learning structure can embed multiple policies (for example using a Conditioned Network).\n    In this case, eval() requires a weight vector as input.\n    \"\"\"\n    def __init__(self, id: Optional[int] = None, device: Union[th.device, str] = \"auto\") -> None:\n        \"\"\"Initializes the policy.",
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "MOAgent",
        "kind": 6,
        "importPath": "morl_baselines.common.morl_algorithm",
        "description": "morl_baselines.common.morl_algorithm",
        "peekOfCode": "class MOAgent(ABC):\n    \"\"\"An MORL Agent, can contain one or multiple MOPolicies. Contains helpers to extract features from the environment, setup logging etc.\"\"\"\n    def __init__(self, env: Optional[gym.Env], device: Union[th.device, str] = \"auto\", seed: Optional[int] = None) -> None:\n        \"\"\"Initializes the agent.\n        Args:\n            env: (gym.Env): The environment\n            device: (str): The device to use for training. Can be \"auto\", \"cpu\" or \"cuda\".\n            seed: (int): The seed to use for the random number generator\n        \"\"\"\n        self.extract_env_info(env)",
        "detail": "morl_baselines.common.morl_algorithm",
        "documentation": {}
    },
    {
        "label": "NatureCNN",
        "kind": 6,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "class NatureCNN(nn.Module):\n    \"\"\"CNN from DQN nature paper: Mnih, Volodymyr, et al. \"Human-level control through deep reinforcement learning.\" Nature 518.7540 (2015): 529-533.\"\"\"\n    def __init__(self, observation_shape: np.ndarray, features_dim: int = 512):\n        \"\"\"CNN from DQN Nature.\n        Args:\n            observation_shape: Shape of the observation.\n            features_dim: Number of features extracted. This corresponds to the number of unit for the last layer.\n        \"\"\"\n        super().__init__()\n        self.features_dim = features_dim",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "mlp",
        "kind": 2,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "def mlp(\n    input_dim: int,\n    output_dim: int,\n    net_arch: List[int],\n    activation_fn: Type[nn.Module] = nn.ReLU,\n    drop_rate: float = 0.0,\n    layer_norm: bool = False,\n) -> nn.Sequential:\n    \"\"\"Create a multi layer perceptron (MLP), which is a collection of fully-connected layers each followed by an activation function.\n    Args:",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "huber",
        "kind": 2,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "def huber(x, min_priority=0.01):\n    \"\"\"Huber loss function.\n    Args:\n        x: The input tensor.\n        min_priority: The minimum priority.\n    Returns:\n        The huber loss.\n    \"\"\"\n    return th.where(x < min_priority, 0.5 * x.pow(2), min_priority * x).mean()\ndef get_grad_norm(params: Iterable[th.nn.Parameter]) -> th.Tensor:",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "get_grad_norm",
        "kind": 2,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "def get_grad_norm(params: Iterable[th.nn.Parameter]) -> th.Tensor:\n    \"\"\"This is how the grad norm is computed inside torch.nn.clip_grad_norm_().\n    Args:\n        params: The parameters to compute the grad norm for.\n    Returns:\n        The grad norm.\n    \"\"\"\n    parameters = [p for p in params if p.grad is not None]\n    if len(parameters) == 0:\n        return th.tensor(0.0)",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "polyak_update",
        "kind": 2,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "def polyak_update(\n    params: Iterable[th.nn.Parameter],\n    target_params: Iterable[th.nn.Parameter],\n    tau: float,\n) -> None:\n    \"\"\"Polyak averaging for target network parameters.\n    Args:\n        params: The parameters to update.\n        target_params: The target parameters.\n        tau: The polyak averaging coefficient (usually small).",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "layer_init",
        "kind": 2,
        "importPath": "morl_baselines.common.networks",
        "description": "morl_baselines.common.networks",
        "peekOfCode": "def layer_init(layer, method=\"orthogonal\", weight_gain: float = 1, bias_const: float = 0) -> None:\n    \"\"\"Initialize a layer with the given method.\n    Args:\n        layer: The layer to initialize.\n        method: The initialization method to use.\n        weight_gain: The gain for the weights.\n        bias_const: The constant for the bias.\n    \"\"\"\n    if isinstance(layer, (nn.Linear, nn.Conv2d)):\n        if method == \"xavier\":",
        "detail": "morl_baselines.common.networks",
        "documentation": {}
    },
    {
        "label": "ParetoArchive",
        "kind": 6,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "class ParetoArchive:\n    \"\"\"Pareto archive.\"\"\"\n    def __init__(self, convex_hull: bool = False):\n        \"\"\"Initializes the Pareto archive.\"\"\"\n        self.convex_hull = convex_hull\n        self.individuals: list = []\n        self.evaluations: List[np.ndarray] = []\n    def add(self, candidate, evaluation: np.ndarray):\n        \"\"\"Adds the candidate to the memory and removes Pareto inefficient points.\n        Args:",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "get_non_pareto_dominated_inds",
        "kind": 2,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "def get_non_pareto_dominated_inds(candidates: Union[np.ndarray, List], remove_duplicates: bool = True) -> np.ndarray:\n    \"\"\"A batched and fast version of the Pareto coverage set algorithm.\n    Args:\n        candidates (ndarray): A numpy array of vectors.\n        remove_duplicates (bool, optional): Whether to remove duplicate vectors. Defaults to True.\n    Returns:\n        ndarray: The indices of the elements that should be kept to form the Pareto front or coverage set.\n    \"\"\"\n    candidates = np.array(candidates)\n    uniques, indcs, invs, counts = np.unique(candidates, return_index=True, return_inverse=True, return_counts=True, axis=0)",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "filter_pareto_dominated",
        "kind": 2,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "def filter_pareto_dominated(candidates: Union[np.ndarray, List], remove_duplicates: bool = True) -> np.ndarray:\n    \"\"\"A batched and fast version of the Pareto coverage set algorithm.\n    Args:\n        candidates (ndarray): A numpy array of vectors.\n        remove_duplicates (bool, optional): Whether to remove duplicate vectors. Defaults to True.\n    Returns:\n        ndarray: A Pareto coverage set.\n    \"\"\"\n    candidates = np.array(candidates)\n    if len(candidates) < 2:",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "filter_convex_dominated",
        "kind": 2,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "def filter_convex_dominated(candidates: Union[np.ndarray, List]) -> np.ndarray:\n    \"\"\"A fast version to prune a set of points to its convex hull. This leverages the QuickHull algorithm.\n    This algorithm first computes the convex hull of the set of points and then prunes the Pareto dominated points.\n    Args:\n        candidates (ndarray): A numpy array of vectors.\n    Returns:\n        ndarray: A convex coverage set.\n    \"\"\"\n    candidates = np.array(candidates)\n    if len(candidates) > 2:",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "get_non_dominated",
        "kind": 2,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "def get_non_dominated(candidates: set) -> set:\n    \"\"\"This function returns the non-dominated subset of elements.\n    Source: https://stackoverflow.com/questions/32791911/fast-calculation-of-pareto-front-in-python\n    The code provided in all the stackoverflow answers is wrong. Important changes have been made in this function.\n    Args:\n        candidates: The input set of candidate vectors.\n    Returns:\n        The non-dominated subset of this input set.\n    \"\"\"\n    candidates = np.array(list(candidates))  # Turn the input set into a numpy array.",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "get_non_dominated_inds",
        "kind": 2,
        "importPath": "morl_baselines.common.pareto",
        "description": "morl_baselines.common.pareto",
        "peekOfCode": "def get_non_dominated_inds(solutions: np.ndarray) -> np.ndarray:\n    \"\"\"Returns a boolean array indicating which points are non-dominated.\"\"\"\n    is_efficient = np.ones(solutions.shape[0], dtype=bool)\n    for i, c in enumerate(solutions):\n        if is_efficient[i]:\n            # Remove dominated points, will also remove itself\n            is_efficient[is_efficient] = np.any(solutions[is_efficient] > c, axis=1)\n            # keep this solution as non-dominated\n            is_efficient[i] = 1\n    return is_efficient",
        "detail": "morl_baselines.common.pareto",
        "documentation": {}
    },
    {
        "label": "hypervolume",
        "kind": 2,
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "peekOfCode": "def hypervolume(ref_point: np.ndarray, points: List[npt.ArrayLike]) -> float:\n    \"\"\"Computes the hypervolume metric for a set of points (value vectors) and a reference point (from Pymoo).\n    Args:\n        ref_point (np.ndarray): Reference point\n        points (List[np.ndarray]): List of value vectors\n    Returns:\n        float: Hypervolume metric\n    \"\"\"\n    return HV(ref_point=ref_point * -1)(np.array(points) * -1)\ndef igd(known_front: List[np.ndarray], current_estimate: List[np.ndarray]) -> float:",
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "igd",
        "kind": 2,
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "peekOfCode": "def igd(known_front: List[np.ndarray], current_estimate: List[np.ndarray]) -> float:\n    \"\"\"Inverted generational distance metric. Requires to know the optimal front.\n    Args:\n        known_front: known pareto front for the problem\n        current_estimate: current pareto front\n    Return:\n        a float stating the average distance between a point in current_estimate and its nearest point in known_front\n    \"\"\"\n    ind = IGD(np.array(known_front))\n    return ind(np.array(current_estimate))",
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "sparsity",
        "kind": 2,
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "peekOfCode": "def sparsity(front: List[np.ndarray]) -> float:\n    \"\"\"Sparsity metric from PGMORL.\n    Basically, the sparsity is the average distance between each point in the front.\n    Args:\n        front: current pareto front to compute the sparsity on\n    Returns:\n        float: sparsity metric\n    \"\"\"\n    if len(front) < 2:\n        return 0.0",
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "expected_utility",
        "kind": 2,
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "peekOfCode": "def expected_utility(front: List[np.ndarray], weights_set: List[np.ndarray], utility: Callable = np.dot) -> float:\n    \"\"\"Expected Utility Metric.\n    Expected utility of the policies on the PF for various weights.\n    Similar to R-Metrics in MOO. But only needs one PF approximation.\n    Paper: L. M. Zintgraf, T. V. Kanters, D. M. Roijers, F. A. Oliehoek, and P. Beau, “Quality Assessment of MORL Algorithms: A Utility-Based Approach,” 2015.\n    Args:\n        front: current pareto front to compute the eum on\n        weights_set: weights to use for the utility computation\n        utility: utility function to use (default: dot product)\n    Returns:",
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "maximum_utility_loss",
        "kind": 2,
        "importPath": "morl_baselines.common.performance_indicators",
        "description": "morl_baselines.common.performance_indicators",
        "peekOfCode": "def maximum_utility_loss(\n    front: List[np.ndarray], reference_set: List[np.ndarray], weights_set: np.ndarray, utility: Callable = np.dot\n) -> float:\n    \"\"\"Maximum Utility Loss Metric.\n    Maximum utility loss of the policies on the PF for various weights.\n    Paper: L. M. Zintgraf, T. V. Kanters, D. M. Roijers, F. A. Oliehoek, and P. Beau, “Quality Assessment of MORL Algorithms: A Utility-Based Approach,” 2015.\n    Args:\n        front: current pareto front to compute the mul on\n        reference_set: reference set (e.g. true Pareto front) to compute the mul on\n        weights_set: weights to use for the utility computation",
        "detail": "morl_baselines.common.performance_indicators",
        "documentation": {}
    },
    {
        "label": "SumTree",
        "kind": 6,
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "peekOfCode": "class SumTree:\n    \"\"\"SumTree with fixed size.\"\"\"\n    def __init__(self, max_size):\n        \"\"\"Initialize the SumTree.\n        Args:\n            max_size: Maximum size of the SumTree\n        \"\"\"\n        self.nodes = []\n        # Tree construction\n        # Double the number of nodes at each level",
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "PrioritizedReplayBuffer",
        "kind": 6,
        "importPath": "morl_baselines.common.prioritized_buffer",
        "description": "morl_baselines.common.prioritized_buffer",
        "peekOfCode": "class PrioritizedReplayBuffer:\n    \"\"\"Prioritized Replay Buffer.\"\"\"\n    def __init__(\n        self,\n        obs_shape,\n        action_dim,\n        rew_dim=1,\n        max_size=100000,\n        obs_dtype=np.float32,\n        action_dtype=np.float32,",
        "detail": "morl_baselines.common.prioritized_buffer",
        "documentation": {}
    },
    {
        "label": "weighted_sum",
        "kind": 2,
        "importPath": "morl_baselines.common.scalarization",
        "description": "morl_baselines.common.scalarization",
        "peekOfCode": "def weighted_sum(reward: np.ndarray, weights: np.ndarray) -> float:\n    \"\"\"Weighted sum scalarization (numpy dot product).\n    Args:\n        reward: Reward vector\n        weights: Weight vector\n    Returns:\n        float: Weighted sum\n    \"\"\"\n    return np.dot(reward, weights)\ndef tchebicheff(tau: float, reward_dim: int):",
        "detail": "morl_baselines.common.scalarization",
        "documentation": {}
    },
    {
        "label": "tchebicheff",
        "kind": 2,
        "importPath": "morl_baselines.common.scalarization",
        "description": "morl_baselines.common.scalarization",
        "peekOfCode": "def tchebicheff(tau: float, reward_dim: int):\n    \"\"\"Tchebicheff scalarization function.\n    This function requires a reference point. It is automatically adapted to the best value seen so far for each component of the reward.\n    Args:\n        tau: Parameter to be sure the reference point is always dominating (automatically adapted).\n        reward_dim: Dimension of the reward vector\n    Returns:\n        Callable: Tchebicheff scalarization function\n    \"\"\"\n    best_so_far = [float(\"-inf\") for _ in range(reward_dim)]",
        "detail": "morl_baselines.common.scalarization",
        "documentation": {}
    },
    {
        "label": "linearly_decaying_value",
        "kind": 2,
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "peekOfCode": "def linearly_decaying_value(initial_value, decay_period, step, warmup_steps, final_value):\n    \"\"\"Returns the current value for a linearly decaying parameter.\n    This follows the Nature DQN schedule of a linearly decaying epsilon (Mnih et\n    al., 2015). The schedule is as follows:\n    Begin at 1. until warmup_steps steps have been taken; then\n    Linearly decay epsilon from 1. to epsilon in decay_period steps; and then\n    Use epsilon from there on.\n    Args:\n        decay_period: float, the period over which the value is decayed.\n        step: int, the number of training steps completed so far.",
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "unique_tol",
        "kind": 2,
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "peekOfCode": "def unique_tol(a: List[np.ndarray], tol=1e-4) -> List[np.ndarray]:\n    \"\"\"Returns unique elements of a list of np.arrays, within a tolerance.\"\"\"\n    if len(a) == 0:\n        return a\n    delete = np.array([False] * len(a))\n    a = np.array(a)\n    for i in range(len(a)):\n        if delete[i]:\n            continue\n        for j in range(i + 1, len(a)):",
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "make_gif",
        "kind": 2,
        "importPath": "morl_baselines.common.utils",
        "description": "morl_baselines.common.utils",
        "peekOfCode": "def make_gif(env, agent, weight: np.ndarray, fullpath: str, fps: int = 50, length: int = 300):\n    \"\"\"Render an episode and save it as a gif.\"\"\"\n    assert \"rgb_array\" in env.metadata[\"render_modes\"], \"Environment does not have rgb_array rendering.\"\n    frames = []\n    state, info = env.reset()\n    terminated, truncated = False, False\n    while not (terminated or truncated) and len(frames) < length:\n        frame = env.render()\n        frames.append(frame)\n        action = agent.eval(state, weight)",
        "detail": "morl_baselines.common.utils",
        "documentation": {}
    },
    {
        "label": "random_weights",
        "kind": 2,
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "peekOfCode": "def random_weights(\n    dim: int, n: int = 1, dist: str = \"dirichlet\", seed: Optional[int] = None, rng: Optional[np.random.Generator] = None\n) -> np.ndarray:\n    \"\"\"Generate random normalized weight vectors from a Gaussian or Dirichlet distribution alpha=1.\n    Args:\n        dim: size of the weight vector\n        n : number of weight vectors to generate\n        dist: distribution to use, either 'gaussian' or 'dirichlet'. Default is 'dirichlet' as it is equivalent to sampling uniformly from the weight simplex.\n        seed: random seed\n        rng: random number generator",
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "equally_spaced_weights",
        "kind": 2,
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "peekOfCode": "def equally_spaced_weights(dim: int, n: int, seed: int = 42) -> List[np.ndarray]:\n    \"\"\"Generate weight vectors that are equally spaced in the weight simplex.\n    It uses the Riesz s-Energy method from pymoo: https://pymoo.org/misc/reference_directions.html\n    Args:\n        dim: size of the weight vector\n        n: number of weight vectors to generate\n        seed: random seed\n    \"\"\"\n    return list(get_reference_directions(\"energy\", dim, n, seed=seed))\ndef extrema_weights(dim: int) -> List[np.ndarray]:",
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "extrema_weights",
        "kind": 2,
        "importPath": "morl_baselines.common.weights",
        "description": "morl_baselines.common.weights",
        "peekOfCode": "def extrema_weights(dim: int) -> List[np.ndarray]:\n    \"\"\"Generate weight vectors in the extrema of the weight simplex. That is, one element is 1 and the rest are 0.\n    Args:\n        dim: size of the weight vector\n    \"\"\"\n    return list(np.eye(dim, dtype=np.float32))",
        "detail": "morl_baselines.common.weights",
        "documentation": {}
    },
    {
        "label": "ReplayMemory",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "class ReplayMemory:\n    \"\"\"Replay memory.\"\"\"\n    def __init__(self, capacity: int):\n        \"\"\"Initialize the replay memory.\"\"\"\n        self.capacity = capacity\n        self.buffer = []\n        self.position = 0\n    def push(self, state, action, weights, reward, next_state, done):\n        \"\"\"Push a transition.\"\"\"\n        if len(self.buffer) < self.capacity:",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "WeightSamplerAngle",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "class WeightSamplerAngle:\n    \"\"\"Sample weight vectors from normal distribution.\"\"\"\n    def __init__(self, rwd_dim, angle, w=None):\n        \"\"\"Initialize the weight sampler.\"\"\"\n        self.rwd_dim = rwd_dim\n        self.angle = angle\n        if w is None:\n            w = th.ones(rwd_dim)\n        w = w / th.norm(w)\n        self.w = w",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "Policy",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "class Policy(nn.Module):\n    \"\"\"Policy network.\"\"\"\n    def __init__(self, obs_dim, rew_dim, output_dim, action_space, net_arch=[256, 256]):\n        \"\"\"Initialize the policy network.\"\"\"\n        super().__init__()\n        self.action_space = action_space\n        self.latent_pi = mlp(obs_dim + rew_dim, -1, net_arch)\n        self.mean = nn.Linear(net_arch[-1], output_dim)\n        self.log_std_linear = nn.Linear(net_arch[-1], output_dim)\n        # action rescaling",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "QNetwork",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "class QNetwork(nn.Module):\n    \"\"\"Q-network S x Ax W -> R^reward_dim.\"\"\"\n    def __init__(self, obs_dim, action_dim, rew_dim, net_arch=[256, 256]):\n        \"\"\"Initialize the Q-network.\"\"\"\n        super().__init__()\n        self.net = mlp(obs_dim + action_dim + rew_dim, rew_dim, net_arch)\n        self.apply(layer_init)\n    def forward(self, obs, action, w):\n        \"\"\"Forward pass of the Q-network.\"\"\"\n        q_values = self.net(th.cat((obs, action, w), dim=obs.dim() - 1))",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "CAPQL",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "class CAPQL(MOAgent, MOPolicy):\n    \"\"\"CAPQL algorithm.\n    MULTI-OBJECTIVE REINFORCEMENT LEARNING: CONVEXITY, STATIONARITY AND PARETO OPTIMALITY\n    Haoye Lu, Daniel Herman & Yaoliang Yu\n    ICLR 2023\n    Paper: https://openreview.net/pdf?id=TjEzIsyEsQ6\n    Code based on: https://github.com/haoyelu/CAPQL\n    \"\"\"\n    def __init__(\n        self,",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "LOG_SIG_MAX",
        "kind": 5,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "LOG_SIG_MAX = 2\nLOG_SIG_MIN = -20\nEPSILON = 1e-6\nclass ReplayMemory:\n    \"\"\"Replay memory.\"\"\"\n    def __init__(self, capacity: int):\n        \"\"\"Initialize the replay memory.\"\"\"\n        self.capacity = capacity\n        self.buffer = []\n        self.position = 0",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "LOG_SIG_MIN",
        "kind": 5,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "LOG_SIG_MIN = -20\nEPSILON = 1e-6\nclass ReplayMemory:\n    \"\"\"Replay memory.\"\"\"\n    def __init__(self, capacity: int):\n        \"\"\"Initialize the replay memory.\"\"\"\n        self.capacity = capacity\n        self.buffer = []\n        self.position = 0\n    def push(self, state, action, weights, reward, next_state, done):",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "EPSILON",
        "kind": 5,
        "importPath": "morl_baselines.multi_policy.capql.capql",
        "description": "morl_baselines.multi_policy.capql.capql",
        "peekOfCode": "EPSILON = 1e-6\nclass ReplayMemory:\n    \"\"\"Replay memory.\"\"\"\n    def __init__(self, capacity: int):\n        \"\"\"Initialize the replay memory.\"\"\"\n        self.capacity = capacity\n        self.buffer = []\n        self.position = 0\n    def push(self, state, action, weights, reward, next_state, done):\n        \"\"\"Push a transition.\"\"\"",
        "detail": "morl_baselines.multi_policy.capql.capql",
        "documentation": {}
    },
    {
        "label": "QNet",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.envelope.envelope",
        "description": "morl_baselines.multi_policy.envelope.envelope",
        "peekOfCode": "class QNet(nn.Module):\n    \"\"\"Multi-objective Q-Network conditioned on the weight vector.\"\"\"\n    def __init__(self, obs_shape, action_dim, rew_dim, net_arch):\n        \"\"\"Initialize the Q network.\n        Args:\n            obs_shape: shape of the observation\n            action_dim: number of actions\n            rew_dim: number of objectives\n            net_arch: network architecture (number of units per layer)\n        \"\"\"",
        "detail": "morl_baselines.multi_policy.envelope.envelope",
        "documentation": {}
    },
    {
        "label": "Envelope",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.envelope.envelope",
        "description": "morl_baselines.multi_policy.envelope.envelope",
        "peekOfCode": "class Envelope(MOPolicy, MOAgent):\n    \"\"\"Envelope Q-Leaning Algorithm.\n    Envelope uses a conditioned network to embed multiple policies (taking the weight as input).\n    The main change of this algorithm compare to a scalarized CN DQN is the target update.\n    Paper: R. Yang, X. Sun, and K. Narasimhan, “A Generalized Algorithm for Multi-Objective Reinforcement Learning and Policy Adaptation,” arXiv:1908.08342 [cs], Nov. 2019, Accessed: Sep. 06, 2021. [Online]. Available: http://arxiv.org/abs/1908.08342.\n    \"\"\"\n    def __init__(\n        self,\n        env,\n        learning_rate: float = 3e-4,",
        "detail": "morl_baselines.multi_policy.envelope.envelope",
        "documentation": {}
    },
    {
        "label": "QNet",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "peekOfCode": "class QNet(nn.Module):\n    \"\"\"Conditioned MO Q network.\"\"\"\n    def __init__(self, obs_shape, action_dim, rew_dim, net_arch, drop_rate=0.01, layer_norm=True):\n        \"\"\"Initialize the net.\n        Args:\n            obs_shape: The observation shape.\n            action_dim: The action dimension.\n            rew_dim: The reward dimension.\n            net_arch: The network architecture.\n            drop_rate: The dropout rate.",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "documentation": {}
    },
    {
        "label": "GPIPD",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "peekOfCode": "class GPIPD(MOPolicy, MOAgent):\n    \"\"\"GPI-PD Algorithm.\n    Sample-Efficient Multi-Objective Learning via Generalized Policy Improvement Prioritization\n    Lucas N. Alegre, Ana L. C. Bazzan, Diederik M. Roijers, Ann Nowé, Bruno C. da Silva\n    AAMAS 2023\n    Paper: https://arxiv.org/abs/2301.07784\n    \"\"\"\n    def __init__(\n        self,\n        env,",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "documentation": {}
    },
    {
        "label": "GPILS",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "peekOfCode": "class GPILS(GPIPD):\n    \"\"\"Model-free version of GPI-PD.\"\"\"\n    def __init__(self, *args, **kwargs):\n        \"\"\"Initialize GPI-LS deactivating the dynamics model.\"\"\"\n        super().__init__(dyna=False, gpi_pd=False, experiment_name=\"GPI-LS\", *args, **kwargs)",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd",
        "documentation": {}
    },
    {
        "label": "Policy",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "peekOfCode": "class Policy(nn.Module):\n    \"\"\"Policy network.\"\"\"\n    def __init__(self, obs_dim, rew_dim, output_dim, action_space, net_arch=[256, 256]):\n        \"\"\"Initialize the policy network.\"\"\"\n        super().__init__()\n        self.action_space = action_space\n        self.latent_pi = mlp(obs_dim + rew_dim, -1, net_arch)\n        self.mean = nn.Linear(net_arch[-1], output_dim)\n        # action rescaling\n        self.register_buffer(\"action_scale\", th.tensor((action_space.high - action_space.low) / 2.0, dtype=th.float32))",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "documentation": {}
    },
    {
        "label": "QNetwork",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "peekOfCode": "class QNetwork(nn.Module):\n    \"\"\"Q-network S x Ax W -> R^reward_dim.\"\"\"\n    def __init__(self, obs_dim, action_dim, rew_dim, net_arch=[256, 256], layer_norm=True, drop_rate=0.01):\n        \"\"\"Initialize the Q-network.\"\"\"\n        super().__init__()\n        self.net = mlp(obs_dim + action_dim + rew_dim, rew_dim, net_arch, drop_rate=drop_rate, layer_norm=layer_norm)\n        self.apply(layer_init)\n    def forward(self, obs, action, w):\n        \"\"\"Forward pass of the Q-network.\"\"\"\n        q_values = self.net(th.cat((obs, action, w), dim=obs.dim() - 1))",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "documentation": {}
    },
    {
        "label": "GPIPDContinuousAction",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "peekOfCode": "class GPIPDContinuousAction(MOAgent, MOPolicy):\n    \"\"\"GPI-PD algorithm with continuous actions.\n    Sample-Efficient Multi-Objective Learning via Generalized Policy Improvement Prioritization\n    Lucas N. Alegre, Ana L. C. Bazzan, Diederik M. Roijers, Ann Nowé, Bruno C. da Silva\n    AAMAS 2023\n    Paper: https://arxiv.org/abs/2301.07784\n    See Appendix for Continuous Action details.\n    \"\"\"\n    def __init__(\n        self,",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "documentation": {}
    },
    {
        "label": "GPILSContinuousAction",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "description": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "peekOfCode": "class GPILSContinuousAction(GPIPDContinuousAction):\n    \"\"\"Model-free version of GPI-PD with continuous actions.\"\"\"\n    def __init__(self, *args, **kwargs):\n        \"\"\"Initialize the agent deactivating the dynamics model.\"\"\"\n        super().__init__(dyna=False, experiment_name=\"GPI-LS Continuous Action\", *args, **kwargs)",
        "detail": "morl_baselines.multi_policy.gpi_pd.gpi_pd_continuous_action",
        "documentation": {}
    },
    {
        "label": "LinearSupport",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.linear_support.linear_support",
        "description": "morl_baselines.multi_policy.linear_support.linear_support",
        "peekOfCode": "class LinearSupport:\n    \"\"\"Linear Support for computing corner weights when using linear utility functions.\n    Implements both\n    Optimistic Linear Support (OLS) algorithm:\n    Paper: (Section 3.3 of http://roijers.info/pub/thesis.pdf).\n    Generalized Policy Improvement Linear Support (GPI-LS) algorithm:\n    Paper: https://arxiv.org/abs/2301.07784\n    \"\"\"\n    def __init__(\n        self,",
        "detail": "morl_baselines.multi_policy.linear_support.linear_support",
        "documentation": {}
    },
    {
        "label": "MPMOQLearning",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.multi_policy_moqlearning.mp_mo_q_learning",
        "description": "morl_baselines.multi_policy.multi_policy_moqlearning.mp_mo_q_learning",
        "peekOfCode": "class MPMOQLearning(MOAgent):\n    \"\"\"Multi-policy MOQ-Learning: Outer loop version of mo_q_learning.\n    Paper: Paper: K. Van Moffaert, M. Drugan, and A. Nowe, Scalarized Multi-Objective Reinforcement Learning: Novel Design Techniques. 2013. doi: 10.1109/ADPRL.2013.6615007.\n    \"\"\"\n    def __init__(\n        self,\n        env,\n        scalarization=weighted_sum,\n        learning_rate: float = 0.1,\n        gamma: float = 0.9,",
        "detail": "morl_baselines.multi_policy.multi_policy_moqlearning.mp_mo_q_learning",
        "documentation": {}
    },
    {
        "label": "PQL",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pareto_q_learning.pql",
        "description": "morl_baselines.multi_policy.pareto_q_learning.pql",
        "peekOfCode": "class PQL(MOAgent):\n    \"\"\"Pareto Q-learning.\n    Tabular method relying on pareto pruning.\n    Paper: K. Van Moffaert and A. Nowé, “Multi-objective reinforcement learning using sets of pareto dominating policies,” The Journal of Machine Learning Research, vol. 15, no. 1, pp. 3483–3512, 2014.\n    \"\"\"\n    def __init__(\n        self,\n        env,\n        ref_point: np.ndarray,\n        gamma: float = 0.8,",
        "detail": "morl_baselines.multi_policy.pareto_q_learning.pql",
        "documentation": {}
    },
    {
        "label": "Transition",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pcn.pcn",
        "description": "morl_baselines.multi_policy.pcn.pcn",
        "peekOfCode": "class Transition:\n    \"\"\"Transition dataclass.\"\"\"\n    observation: np.ndarray\n    action: int\n    reward: np.ndarray\n    next_observation: np.ndarray\n    terminal: bool\nclass Model(nn.Module):\n    \"\"\"Model for the PCN.\"\"\"\n    def __init__(self, state_dim: int, action_dim: int, reward_dim: int, scaling_factor: np.ndarray, hidden_dim: int = 64):",
        "detail": "morl_baselines.multi_policy.pcn.pcn",
        "documentation": {}
    },
    {
        "label": "Model",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pcn.pcn",
        "description": "morl_baselines.multi_policy.pcn.pcn",
        "peekOfCode": "class Model(nn.Module):\n    \"\"\"Model for the PCN.\"\"\"\n    def __init__(self, state_dim: int, action_dim: int, reward_dim: int, scaling_factor: np.ndarray, hidden_dim: int = 64):\n        \"\"\"Initialize the PCN model.\"\"\"\n        super().__init__()\n        self.state_dim = state_dim\n        self.action_dim = action_dim\n        self.reward_dim = reward_dim\n        self.scaling_factor = nn.Parameter(th.tensor(scaling_factor).float(), requires_grad=False)\n        self.hidden_dim = hidden_dim",
        "detail": "morl_baselines.multi_policy.pcn.pcn",
        "documentation": {}
    },
    {
        "label": "PCN",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pcn.pcn",
        "description": "morl_baselines.multi_policy.pcn.pcn",
        "peekOfCode": "class PCN(MOAgent, MOPolicy):\n    \"\"\"Pareto Conditioned Networks (PCN).\n    Reymond, M., Bargiacchi, E., & Nowé, A. (2022, May). Pareto Conditioned Networks.\n    In Proceedings of the 21st International Conference on Autonomous Agents\n    and Multiagent Systems (pp. 1110-1118).\n    https://www.ifaamas.org/Proceedings/aamas2022/pdfs/p1110.pdf\n    ## Credits\n    This code is a refactor of the code from the authors of the paper, available at:\n    https://github.com/mathieu-reymond/pareto-conditioned-networks\n    \"\"\"",
        "detail": "morl_baselines.multi_policy.pcn.pcn",
        "documentation": {}
    },
    {
        "label": "crowding_distance",
        "kind": 2,
        "importPath": "morl_baselines.multi_policy.pcn.pcn",
        "description": "morl_baselines.multi_policy.pcn.pcn",
        "peekOfCode": "def crowding_distance(points):\n    \"\"\"Compute the crowding distance of a set of points.\"\"\"\n    # first normalize across dimensions\n    points = (points - points.min(axis=0)) / (points.ptp(axis=0) + 1e-8)\n    # sort points per dimension\n    dim_sorted = np.argsort(points, axis=0)\n    point_sorted = np.take_along_axis(points, dim_sorted, axis=0)\n    # compute distances between lower and higher point\n    distances = np.abs(point_sorted[:-2] - point_sorted[2:])\n    # pad extrema's with 1, for each dimension",
        "detail": "morl_baselines.multi_policy.pcn.pcn",
        "documentation": {}
    },
    {
        "label": "PerformancePredictor",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "description": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "peekOfCode": "class PerformancePredictor:\n    \"\"\"Performance prediction model.\n    Stores the performance deltas along with the used weights after each generation.\n    Then, uses these stored samples to perform a regression for predicting the performance of using a given weight\n    to train a given policy.\n    Predicts: Weight & performance -> delta performance\n    \"\"\"\n    def __init__(\n        self,\n        neighborhood_threshold: float = 0.1,",
        "detail": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "documentation": {}
    },
    {
        "label": "PerformanceBuffer",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "description": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "peekOfCode": "class PerformanceBuffer:\n    \"\"\"Stores the population. Divides the objective space in to n bins of size max_size.\n    (!) restricted to 2D objective space (!)\n    \"\"\"\n    def __init__(self, num_bins: int, max_size: int, origin: np.ndarray):\n        \"\"\"Initializes the buffer.\n        Args:\n            num_bins: number of bins\n            max_size: maximum size of each bin\n            origin: origin of the objective space (to have only positive values)",
        "detail": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "documentation": {}
    },
    {
        "label": "PGMORL",
        "kind": 6,
        "importPath": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "description": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "peekOfCode": "class PGMORL(MOAgent):\n    \"\"\"Prediction Guided Multi-Objective Reinforcement Learning.\n    Reference: J. Xu, Y. Tian, P. Ma, D. Rus, S. Sueda, and W. Matusik,\n    “Prediction-Guided Multi-Objective Reinforcement Learning for Continuous Robot Control,”\n    in Proceedings of the 37th International Conference on Machine Learning,\n    Nov. 2020, pp. 10607–10616. Available: https://proceedings.mlr.press/v119/xu20h.html\n    Paper: https://people.csail.mit.edu/jiex/papers/PGMORL/paper.pdf\n    Supplementary materials: https://people.csail.mit.edu/jiex/papers/PGMORL/supp.pdf\n    \"\"\"\n    def __init__(",
        "detail": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "documentation": {}
    },
    {
        "label": "generate_weights",
        "kind": 2,
        "importPath": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "description": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "peekOfCode": "def generate_weights(delta_weight: float) -> np.ndarray:\n    \"\"\"Generates weights uniformly distributed over the objective dimensions. These weight vectors are separated by delta_weight distance.\n    Args:\n        delta_weight: distance between weight vectors\n    Returns:\n        all the candidate weights\n    \"\"\"\n    return np.linspace((0.0, 1.0), (1.0, 0.0), int(1 / delta_weight) + 1, dtype=np.float32)\nclass PerformanceBuffer:\n    \"\"\"Stores the population. Divides the objective space in to n bins of size max_size.",
        "detail": "morl_baselines.multi_policy.pgmorl.pgmorl",
        "documentation": {}
    },
    {
        "label": "PolicyNet",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "peekOfCode": "class PolicyNet(nn.Module):\n    \"\"\"Policy network.\"\"\"\n    def __init__(self, obs_shape, action_dim, rew_dim, net_arch):\n        \"\"\"Initialize the policy network.\n        Args:\n            obs_shape: Observation shape\n            action_dim: Action dimension\n            rew_dim: Reward dimension\n            net_arch: Number of units per layer\n        \"\"\"",
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "EUPG",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.esr.eupg",
        "description": "morl_baselines.single_policy.esr.eupg",
        "peekOfCode": "class EUPG(MOPolicy, MOAgent):\n    \"\"\"Expected Utility Policy Gradient Algorithm.\n    The idea is to condition the network on the accrued reward and to scalarize the rewards based on the episodic return (accrued + future rewards)\n    Paper: D. Roijers, D. Steckelmacher, and A. Nowe, Multi-objective Reinforcement Learning for the Expected Utility of the Return. 2018.\n    \"\"\"\n    def __init__(\n        self,\n        env: gym.Env,\n        scalarization,\n        buffer_size: int = int(1e5),",
        "detail": "morl_baselines.single_policy.esr.eupg",
        "documentation": {}
    },
    {
        "label": "PPOReplayBuffer",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "peekOfCode": "class PPOReplayBuffer:\n    \"\"\"Replay buffer.\"\"\"\n    def __init__(\n        self,\n        size: int,\n        num_envs: int,\n        obs_shape: tuple,\n        action_shape: tuple,\n        reward_dim: int,\n        device: Union[th.device, str],",
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "MOPPONet",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "peekOfCode": "class MOPPONet(nn.Module):\n    \"\"\"Actor-Critic network.\"\"\"\n    def __init__(\n        self,\n        obs_shape: tuple,\n        action_shape: tuple,\n        reward_dim: int,\n        net_arch: List = [64, 64],\n    ):\n        \"\"\"Initialize the network.",
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "MOPPO",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "peekOfCode": "class MOPPO(MOPolicy):\n    \"\"\"Modified PPO to have a multi-objective value net (returning a vector) and applying weighted sum scalarization.\n    This code has been adapted from the PPO implementation of clean RL https://github.com/vwxyzjn/cleanrl/blob/master/cleanrl/ppo_continuous_action.py\n    \"\"\"\n    def __init__(\n        self,\n        id: int,\n        networks: MOPPONet,\n        weights: np.ndarray,\n        envs: gym.vector.SyncVectorEnv,",
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "morl_baselines.single_policy.ser.mo_ppo",
        "description": "morl_baselines.single_policy.ser.mo_ppo",
        "peekOfCode": "def make_env(env_id, seed, idx, run_name, gamma):\n    \"\"\"Returns a function to create environments. This is because PPO works better with vectorized environments. Also, some tricks like clipping and normalizing the environments' features are applied.\n    Args:\n        env_id: Environment ID (for MO-Gymnasium)\n        seed: Seed\n        idx: Index of the environment\n        run_name: Name of the run\n        gamma: Discount factor\n    Returns:\n        A function to create environments",
        "detail": "morl_baselines.single_policy.ser.mo_ppo",
        "documentation": {}
    },
    {
        "label": "MOQLearning",
        "kind": 6,
        "importPath": "morl_baselines.single_policy.ser.mo_q_learning",
        "description": "morl_baselines.single_policy.ser.mo_q_learning",
        "peekOfCode": "class MOQLearning(MOPolicy, MOAgent):\n    \"\"\"Scalarized Q learning for single policy multi-objective reinforcement learning.\n    Maintains one Q-table per objective, rely on a scalarization function to choose the moves.\n    Paper: K. Van Moffaert, M. Drugan, and A. Nowe, Scalarized Multi-Objective Reinforcement Learning: Novel Design Techniques. 2013. doi: 10.1109/ADPRL.2013.6615007.\n    \"\"\"\n    def __init__(\n        self,\n        env,\n        id: Optional[int] = None,\n        weights: np.ndarray = np.array([0.5, 0.5]),",
        "detail": "morl_baselines.single_policy.ser.mo_q_learning",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.latest-run.files.code.Multiobjective.main_train",
        "description": "wandb.latest-run.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.latest-run.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.latest-run.files.code.Multiobjective.main_train",
        "description": "wandb.latest-run.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.latest-run.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_132630-i35etvbr.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "description": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "description": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_142406-q5fpirvp.files.code.Multiobjective.load_test",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "description": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "description": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_142518-g781xwfa.files.code.Multiobjective.load_test",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_143613-9mrjtnf6.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_144222-53duuvmw.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_144528-0jv727rx.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_144639-wix04vqt.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_144838-ynl4x72j.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_145027-39g0e7t5.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_145303-gdd108mv.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_145400-ixn2lm1h.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_145950-7s84m3bl.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_150231-7ixlyc1g.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_150345-3fqarnv1.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_150858-yeypugug.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_151816-gjulfr4z.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_152508-h0ogc9h8.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_154929-95vzbhot.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_161350-pycbew2f.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230823_161456-hn3iae2b.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_130332-bbozxava.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_131807-wcjpu2sy.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_132349-3uj6a4po.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_132510-hwpicxkf.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_133354-eopkc14f.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_133541-o8oiximn.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_134130-wfx9s8hc.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_134431-9u0ing6a.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_134607-ed3r1qps.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_135239-89vk2tb6.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_135924-agivvhwi.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_141054-i7dmcnts.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_150232-tp94kcx9.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_150700-r03ulwl4.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_151555-l81fr0u9.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_152413-keojmves.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_152446-5an2ufxf.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_153026-igvi7t2t.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_153404-pktvid59.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_153747-kf3okud1.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_154100-p95fyq5z.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_154251-9x0k231t.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_154832-rpuicy8x.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_155225-ou88o797.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_155508-jvnv8z65.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_155858-25pvyj5n.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_160424-z4gkvh20.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 1\n    env = make_env(4,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230824_161444-wtwhe36j.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230825_104925-hfbfbx0a.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "description": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env_id = \"mo-halfcheetah-v4\"\n        env = gymnasium.make(env_id)\n        #env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))",
        "detail": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "description": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230825_125757-dbxzgk9n.files.code.Multiobjective.main_train2",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230825_130723-71s9xh44.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230825_131330-swy2yt24.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "description": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "wandb.run-20230825_131538-3kjhy4p8.files.code.Multiobjective.main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "load_test",
        "description": "load_test",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "load_test",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "load_test",
        "description": "load_test",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "load_test",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "main_test",
        "description": "main_test",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env\n    return _init\ndef main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30",
        "detail": "main_test",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main_test",
        "description": "main_test",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 30\n    eval_env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    eval_env = DummyVecEnv([lambda: eval_env])\n    eval_env = VecFrameStack(eval_env, n_stack=30) \n    eval_env = VecNormalize(eval_env, norm_obs=True, norm_reward=True)\n    model_param = sys.argv[1] #Fetching model parameter\n    discount_param = sys.argv[2] #Fetching discount parameter",
        "detail": "main_test",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "main_train",
        "description": "main_train",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))\n        #env.seed(seed)\n        return env",
        "detail": "main_train",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main_train",
        "description": "main_train",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "main_train",
        "documentation": {}
    },
    {
        "label": "make_env",
        "kind": 2,
        "importPath": "main_train2",
        "description": "main_train2",
        "peekOfCode": "def make_env(seed,reward_type,days_per_eps):\n    def _init():\n        register(\n            id=\"traffic-env-v0\",\n            entry_point=\"oop_simulation_script:CommuteEnv\",\n        )\n        env = mo_gym.make(\"minecart-deterministic-v0\")\n        env = MORecordEpisodeStatistics(env, gamma=1.0)\n        #env = gymnasium.make(\"traffic-env-v0\")\n        #env = Monitor(CommuteEnv(reward_type,days_per_eps))",
        "detail": "main_train2",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "main_train2",
        "description": "main_train2",
        "peekOfCode": "def main():\n    # Set up environment\n    reward_type = \"sw\" # tt: Travel Time    sw: Social Welfare\n    days_per_eps = 3\n    env = make_env(10,reward_type,days_per_eps)() # Seed as argument\n    #env = DummyVecEnv([lambda: env])\n    #env = VecFrameStack(env, n_stack=30) \n    #env = VecNormalize(env, norm_obs=True, norm_reward=True)\n    # Load trained model\n    print(\"Creating model...\")",
        "detail": "main_train2",
        "documentation": {}
    },
    {
        "label": "Simulation",
        "kind": 6,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "class Simulation():\n    # setting up simulation with initial parameters\n    def __init__(self, params):\n        np.random.seed(seed=59) # tried 2\n        # setting values from parameter input\n        self.omega = params['omega'] # Learning rate\n        self.theta = params['theta'] #scale parameter\n        self.tao = params['tao'] # number of time intervals\n        self.Number_of_user = params['Number_of_user'] # number of users\n        self.time_slots_names = ['t'+str(i) for i in range(2*self.tao+1)]",
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "CommuteEnv",
        "kind": 6,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "class CommuteEnv(Env):\n    # creating a custom gym environment for training and testing models\n    #def __init__(self,reward_type=\"tt\",days_per_eps=30):\n    def __init__(self):\n        super().__init__()\n        self.params = {'alpha':1.1, 'omega':0.9, 'theta':5*10**(-1), 'tao':90, 'Number_of_user':3700} # alpha is unused\n        # define action space for each actionable value\n        # mu, sigma, A\n        #self.action_space = Box(low=np.array([-1.0, -1.0, -1.0]), high=np.array([1.0, 1.0, 1.0]), shape=(3,), dtype=np.float64)\n        self.action_space = Box(low=np.array([-1.0, -1.0, -1.0]), high=np.array([1.0, 1.0, 1.0]), shape=(3,), dtype=np.float32) #used for absolute actions",
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "column_generate",
        "kind": 2,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "def column_generate(time_slot,case='all'):\n    columns=[]\n    if case=='all':\n        for i in range(Number_of_user):\n            columns.append([j for j in range(np.sum(time_slot[i]<Departure_time[i])-tao,\\\n                                                      np.sum(time_slot[i]<Departure_time[i])+tao+1)])\n    elif case=='chosen':\n        for i in range(Number_of_user):\n            columns.append([np.sum(time_slot[i]<Departure_time[i])])\n    return columns",
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "V1",
        "kind": 2,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "def V1(x):\n    return np.square(1-x/4500)*9.78\n@njit\ndef fic_tt(user, time_point, all_time_matrix, new_timelist, trip_len, Accumulation,Number_of_user):\n    # get the fictional departure time for the fictional traveler\n    star_time=all_time_matrix[user,time_point]\n    # get the list of events happening after this given departure time point to simulate the expected states\n    known_list=new_timelist[new_timelist>star_time]\n    if len(known_list)==0: # if this fictional departure happens after all real travelers\n        # exit the network assuming free flow speed (9.78)",
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "fic_tt",
        "kind": 2,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "def fic_tt(user, time_point, all_time_matrix, new_timelist, trip_len, Accumulation,Number_of_user):\n    # get the fictional departure time for the fictional traveler\n    star_time=all_time_matrix[user,time_point]\n    # get the list of events happening after this given departure time point to simulate the expected states\n    known_list=new_timelist[new_timelist>star_time]\n    if len(known_list)==0: # if this fictional departure happens after all real travelers\n        # exit the network assuming free flow speed (9.78)\n        texp=trip_len[user]/9.78/60\n    elif len(known_list)==Number_of_user*2: # this fictional departure happens before all real travelers enter the network\n        # compute the left trip length till the first real traveler enter the network",
        "detail": "oop_simulation_script",
        "documentation": {}
    },
    {
        "label": "T_est",
        "kind": 2,
        "importPath": "oop_simulation_script",
        "description": "oop_simulation_script",
        "peekOfCode": "def T_est(all_time_matrix, new_timelist, trip_len, Accumulation, Number_of_user, tao):\n    T_estimate_array=np.zeros((Number_of_user,2*tao+1))\n    for i in prange(Number_of_user):\n        for j in prange(2*tao+1):\n            #fic_tt calculates the time spent in the network for a given trip length\n            T_estimate_array[i,j]=fic_tt(i, j, all_time_matrix, new_timelist, trip_len, Accumulation,Number_of_user)\n    return T_estimate_array\nclass Simulation():\n    # setting up simulation with initial parameters\n    def __init__(self, params):",
        "detail": "oop_simulation_script",
        "documentation": {}
    }
]